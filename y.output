State 5 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: TOKEN_PROGAM TOKEN_IDENTIFIER TOKEN_SEMICOLON program_aux TOKEN_MAIN body TOKEN_END

    2 program_aux: vars program_funcs_aux
    3            | program_funcs_aux
    4            | /* empty */

    5 program_funcs_aux: funcs program_funcs_aux
    6                  | /* empty */

    7 vars: TOKEN_VAR vars_aux

    8 vars_aux: TOKEN_IDENTIFIER vars_id_aux TOKEN_COLON type TOKEN_SEMICOLON vars_loop

    9 vars_loop: vars_aux
   10          | /* empty */

   11 vars_id_aux: TOKEN_COMMA TOKEN_IDENTIFIER vars_id_aux
   12            | /* empty */

   13 type: TOKEN_INT
   14     | TOKEN_FLOAT

   15 body: TOKEN_OPEN_BRACE body_aux TOKEN_CLOSED_BRACE

   16 body_aux: statement body_aux
   17         | /* empty */

   18 statement: assign
   19          | condition
   20          | cycle
   21          | f_call
   22          | print

   23 assign: TOKEN_IDENTIFIER TOKEN_ASSIGNMENT expression TOKEN_SEMICOLON

   24 condition: TOKEN_IF TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS body condition_aux TOKEN_SEMICOLON

   25 condition_aux: TOKEN_ELSE body
   26              | /* empty */

   27 cycle: TOKEN_WHILE body TOKEN_DO TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

   28 f_call: TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS f_call_aux TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

   29 f_call_aux: expression f_call_comma
   30           | /* empty */

   31 f_call_comma: TOKEN_COMMA expression f_call_comma
   32             | /* empty */

   33 print: TOKEN_PRINT TOKEN_OPEN_PARENTHESIS print_aux TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

   34 print_aux: TOKEN_CONST_STRING print_comma
   35          | expression print_comma

   36 print_comma: TOKEN_COMMA expression print_comma
   37            | TOKEN_COMMA TOKEN_CONST_STRING print_comma
   38            | /* empty */

   39 expression: exp expression_aux

   40 expression_aux: expression_operator exp
   41               | /* empty */

   42 expression_operator: TOKEN_GREATER_THAN
   43                    | TOKEN_LESS_THAN
   44                    | TOKEN_NOT_EQUAL

   45 exp: term exp_aux

   46 exp_aux: exp_operator exp
   47        | /* empty */

   48 exp_operator: TOKEN_PLUS
   49             | TOKEN_MINUS

   50 term: factor term_aux

   51 term_aux: term_operator term
   52         | /* empty */

   53 term_operator: TOKEN_MULTIPLICATION
   54              | TOKEN_DIVISION

   55 factor: TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS
   56       | factor_operator factor_symbol

   57 factor_operator: TOKEN_PLUS
   58                | TOKEN_MINUS
   59                | /* empty */

   60 factor_symbol: TOKEN_IDENTIFIER
   61              | cte

   62 cte: TOKEN_CONST_INT
   63    | TOKEN_CONST_FLOAT

   64 funcs: TOKEN_VOID TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS funcs_aux TOKEN_CLOSED_PARENTHESIS TOKEN_OPEN_BRACKET funcs_bracket_aux body TOKEN_CLOSED_BRACKET TOKEN_SEMICOLON

   65 funcs_aux: TOKEN_IDENTIFIER TOKEN_COLON type funcs_comma
   66          | /* empty */

   67 funcs_comma: TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_COLON type funcs_comma
   68            | /* empty */

   69 funcs_bracket_aux: vars
   70                  | /* empty */


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_PROGAM (258) 1
TOKEN_MAIN (259) 1
TOKEN_VOID (260) 64
TOKEN_END (261) 1
TOKEN_VAR (262) 7
TOKEN_IF (263) 24
TOKEN_ELSE (264) 25
TOKEN_WHILE (265) 27
TOKEN_DO (266) 27
TOKEN_PRINT (267) 33
TOKEN_ASSIGNMENT (268) 23
TOKEN_SEMICOLON (269) 1 8 23 24 27 28 33 64
TOKEN_COLON (270) 8 65 67
TOKEN_COMMA (271) 11 31 36 37 67
TOKEN_INT (272) 13
TOKEN_FLOAT (273) 14
TOKEN_OPEN_PARENTHESIS (274) 24 27 28 33 55 64
TOKEN_CLOSED_PARENTHESIS (275) 24 27 28 33 55 64
TOKEN_OPEN_BRACKET (276) 64
TOKEN_CLOSED_BRACKET (277) 64
TOKEN_OPEN_BRACE (278) 15
TOKEN_CLOSED_BRACE (279) 15
TOKEN_PLUS (280) 48 57
TOKEN_MINUS (281) 49 58
TOKEN_MULTIPLICATION (282) 53
TOKEN_DIVISION (283) 54
TOKEN_LESS_THAN (284) 43
TOKEN_GREATER_THAN (285) 42
TOKEN_NOT_EQUAL (286) 44
TOKEN_IDENTIFIER (287) 1 8 11 23 28 60 64 65 67
TOKEN_CONST_STRING (288) 34 37
TOKEN_CONST_INT (289) 62
TOKEN_CONST_FLOAT (290) 63


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1, on right: 0
program_aux (38)
    on left: 2 3 4, on right: 1
program_funcs_aux (39)
    on left: 5 6, on right: 2 3 5
vars (40)
    on left: 7, on right: 2 69
vars_aux (41)
    on left: 8, on right: 7 9
vars_loop (42)
    on left: 9 10, on right: 8
vars_id_aux (43)
    on left: 11 12, on right: 8 11
type (44)
    on left: 13 14, on right: 8 65 67
body (45)
    on left: 15, on right: 1 24 25 27 64
body_aux (46)
    on left: 16 17, on right: 15 16
statement (47)
    on left: 18 19 20 21 22, on right: 16
assign (48)
    on left: 23, on right: 18
condition (49)
    on left: 24, on right: 19
condition_aux (50)
    on left: 25 26, on right: 24
cycle (51)
    on left: 27, on right: 20
f_call (52)
    on left: 28, on right: 21
f_call_aux (53)
    on left: 29 30, on right: 28
f_call_comma (54)
    on left: 31 32, on right: 29 31
print (55)
    on left: 33, on right: 22
print_aux (56)
    on left: 34 35, on right: 33
print_comma (57)
    on left: 36 37 38, on right: 34 35 36 37
expression (58)
    on left: 39, on right: 23 24 27 29 31 35 36 55
expression_aux (59)
    on left: 40 41, on right: 39
expression_operator (60)
    on left: 42 43 44, on right: 40
exp (61)
    on left: 45, on right: 39 40 46
exp_aux (62)
    on left: 46 47, on right: 45
exp_operator (63)
    on left: 48 49, on right: 46
term (64)
    on left: 50, on right: 45 51
term_aux (65)
    on left: 51 52, on right: 50
term_operator (66)
    on left: 53 54, on right: 51
factor (67)
    on left: 55 56, on right: 50
factor_operator (68)
    on left: 57 58 59, on right: 56
factor_symbol (69)
    on left: 60 61, on right: 56
cte (70)
    on left: 62 63, on right: 61
funcs (71)
    on left: 64, on right: 5
funcs_aux (72)
    on left: 65 66, on right: 64
funcs_comma (73)
    on left: 67 68, on right: 65 67
funcs_bracket_aux (74)
    on left: 69 70, on right: 64


state 0

    0 $accept: . program $end

    TOKEN_PROGAM  shift, and go to state 1

    program  go to state 2


state 1

    1 program: TOKEN_PROGAM . TOKEN_IDENTIFIER TOKEN_SEMICOLON program_aux TOKEN_MAIN body TOKEN_END

    TOKEN_IDENTIFIER  shift, and go to state 3


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: TOKEN_PROGAM TOKEN_IDENTIFIER . TOKEN_SEMICOLON program_aux TOKEN_MAIN body TOKEN_END

    TOKEN_SEMICOLON  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: TOKEN_PROGAM TOKEN_IDENTIFIER TOKEN_SEMICOLON . program_aux TOKEN_MAIN body TOKEN_END

    TOKEN_VOID  shift, and go to state 6
    TOKEN_VAR   shift, and go to state 7

    TOKEN_MAIN  reduce using rule 4 (program_aux)
    TOKEN_MAIN  [reduce using rule 6 (program_funcs_aux)]
    $default    reduce using rule 4 (program_aux)

    program_aux        go to state 8
    program_funcs_aux  go to state 9
    vars               go to state 10
    funcs              go to state 11


state 6

   64 funcs: TOKEN_VOID . TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS funcs_aux TOKEN_CLOSED_PARENTHESIS TOKEN_OPEN_BRACKET funcs_bracket_aux body TOKEN_CLOSED_BRACKET TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 12


state 7

    7 vars: TOKEN_VAR . vars_aux

    TOKEN_IDENTIFIER  shift, and go to state 13

    vars_aux  go to state 14


state 8

    1 program: TOKEN_PROGAM TOKEN_IDENTIFIER TOKEN_SEMICOLON program_aux . TOKEN_MAIN body TOKEN_END

    TOKEN_MAIN  shift, and go to state 15


state 9

    3 program_aux: program_funcs_aux .

    $default  reduce using rule 3 (program_aux)


state 10

    2 program_aux: vars . program_funcs_aux

    TOKEN_VOID  shift, and go to state 6

    $default  reduce using rule 6 (program_funcs_aux)

    program_funcs_aux  go to state 16
    funcs              go to state 11


state 11

    5 program_funcs_aux: funcs . program_funcs_aux

    TOKEN_VOID  shift, and go to state 6

    $default  reduce using rule 6 (program_funcs_aux)

    program_funcs_aux  go to state 17
    funcs              go to state 11


state 12

   64 funcs: TOKEN_VOID TOKEN_IDENTIFIER . TOKEN_OPEN_PARENTHESIS funcs_aux TOKEN_CLOSED_PARENTHESIS TOKEN_OPEN_BRACKET funcs_bracket_aux body TOKEN_CLOSED_BRACKET TOKEN_SEMICOLON

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 18


state 13

    8 vars_aux: TOKEN_IDENTIFIER . vars_id_aux TOKEN_COLON type TOKEN_SEMICOLON vars_loop

    TOKEN_COMMA  shift, and go to state 19

    $default  reduce using rule 12 (vars_id_aux)

    vars_id_aux  go to state 20


state 14

    7 vars: TOKEN_VAR vars_aux .

    $default  reduce using rule 7 (vars)


state 15

    1 program: TOKEN_PROGAM TOKEN_IDENTIFIER TOKEN_SEMICOLON program_aux TOKEN_MAIN . body TOKEN_END

    TOKEN_OPEN_BRACE  shift, and go to state 21

    body  go to state 22


state 16

    2 program_aux: vars program_funcs_aux .

    $default  reduce using rule 2 (program_aux)


state 17

    5 program_funcs_aux: funcs program_funcs_aux .

    $default  reduce using rule 5 (program_funcs_aux)


state 18

   64 funcs: TOKEN_VOID TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS . funcs_aux TOKEN_CLOSED_PARENTHESIS TOKEN_OPEN_BRACKET funcs_bracket_aux body TOKEN_CLOSED_BRACKET TOKEN_SEMICOLON

    TOKEN_IDENTIFIER  shift, and go to state 23

    $default  reduce using rule 66 (funcs_aux)

    funcs_aux  go to state 24


state 19

   11 vars_id_aux: TOKEN_COMMA . TOKEN_IDENTIFIER vars_id_aux

    TOKEN_IDENTIFIER  shift, and go to state 25


state 20

    8 vars_aux: TOKEN_IDENTIFIER vars_id_aux . TOKEN_COLON type TOKEN_SEMICOLON vars_loop

    TOKEN_COLON  shift, and go to state 26


state 21

   15 body: TOKEN_OPEN_BRACE . body_aux TOKEN_CLOSED_BRACE

    TOKEN_IF          shift, and go to state 27
    TOKEN_WHILE       shift, and go to state 28
    TOKEN_PRINT       shift, and go to state 29
    TOKEN_IDENTIFIER  shift, and go to state 30

    $default  reduce using rule 17 (body_aux)

    body_aux   go to state 31
    statement  go to state 32
    assign     go to state 33
    condition  go to state 34
    cycle      go to state 35
    f_call     go to state 36
    print      go to state 37


state 22

    1 program: TOKEN_PROGAM TOKEN_IDENTIFIER TOKEN_SEMICOLON program_aux TOKEN_MAIN body . TOKEN_END

    TOKEN_END  shift, and go to state 38


state 23

   65 funcs_aux: TOKEN_IDENTIFIER . TOKEN_COLON type funcs_comma

    TOKEN_COLON  shift, and go to state 39


state 24

   64 funcs: TOKEN_VOID TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS funcs_aux . TOKEN_CLOSED_PARENTHESIS TOKEN_OPEN_BRACKET funcs_bracket_aux body TOKEN_CLOSED_BRACKET TOKEN_SEMICOLON

    TOKEN_CLOSED_PARENTHESIS  shift, and go to state 40


state 25

   11 vars_id_aux: TOKEN_COMMA TOKEN_IDENTIFIER . vars_id_aux

    TOKEN_COMMA  shift, and go to state 19

    $default  reduce using rule 12 (vars_id_aux)

    vars_id_aux  go to state 41


state 26

    8 vars_aux: TOKEN_IDENTIFIER vars_id_aux TOKEN_COLON . type TOKEN_SEMICOLON vars_loop

    TOKEN_INT    shift, and go to state 42
    TOKEN_FLOAT  shift, and go to state 43

    type  go to state 44


state 27

   24 condition: TOKEN_IF . TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS body condition_aux TOKEN_SEMICOLON

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 45


state 28

   27 cycle: TOKEN_WHILE . body TOKEN_DO TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_OPEN_BRACE  shift, and go to state 21

    body  go to state 46


state 29

   33 print: TOKEN_PRINT . TOKEN_OPEN_PARENTHESIS print_aux TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 47


state 30

   23 assign: TOKEN_IDENTIFIER . TOKEN_ASSIGNMENT expression TOKEN_SEMICOLON
   28 f_call: TOKEN_IDENTIFIER . TOKEN_OPEN_PARENTHESIS f_call_aux TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_ASSIGNMENT        shift, and go to state 48
    TOKEN_OPEN_PARENTHESIS  shift, and go to state 49


state 31

   15 body: TOKEN_OPEN_BRACE body_aux . TOKEN_CLOSED_BRACE

    TOKEN_CLOSED_BRACE  shift, and go to state 50


state 32

   16 body_aux: statement . body_aux

    TOKEN_IF          shift, and go to state 27
    TOKEN_WHILE       shift, and go to state 28
    TOKEN_PRINT       shift, and go to state 29
    TOKEN_IDENTIFIER  shift, and go to state 30

    $default  reduce using rule 17 (body_aux)

    body_aux   go to state 51
    statement  go to state 32
    assign     go to state 33
    condition  go to state 34
    cycle      go to state 35
    f_call     go to state 36
    print      go to state 37


state 33

   18 statement: assign .

    $default  reduce using rule 18 (statement)


state 34

   19 statement: condition .

    $default  reduce using rule 19 (statement)


state 35

   20 statement: cycle .

    $default  reduce using rule 20 (statement)


state 36

   21 statement: f_call .

    $default  reduce using rule 21 (statement)


state 37

   22 statement: print .

    $default  reduce using rule 22 (statement)


state 38

    1 program: TOKEN_PROGAM TOKEN_IDENTIFIER TOKEN_SEMICOLON program_aux TOKEN_MAIN body TOKEN_END .

    $default  reduce using rule 1 (program)


state 39

   65 funcs_aux: TOKEN_IDENTIFIER TOKEN_COLON . type funcs_comma

    TOKEN_INT    shift, and go to state 42
    TOKEN_FLOAT  shift, and go to state 43

    type  go to state 52


state 40

   64 funcs: TOKEN_VOID TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS funcs_aux TOKEN_CLOSED_PARENTHESIS . TOKEN_OPEN_BRACKET funcs_bracket_aux body TOKEN_CLOSED_BRACKET TOKEN_SEMICOLON

    TOKEN_OPEN_BRACKET  shift, and go to state 53


state 41

   11 vars_id_aux: TOKEN_COMMA TOKEN_IDENTIFIER vars_id_aux .

    $default  reduce using rule 11 (vars_id_aux)


state 42

   13 type: TOKEN_INT .

    $default  reduce using rule 13 (type)


state 43

   14 type: TOKEN_FLOAT .

    $default  reduce using rule 14 (type)


state 44

    8 vars_aux: TOKEN_IDENTIFIER vars_id_aux TOKEN_COLON type . TOKEN_SEMICOLON vars_loop

    TOKEN_SEMICOLON  shift, and go to state 54


state 45

   24 condition: TOKEN_IF TOKEN_OPEN_PARENTHESIS . expression TOKEN_CLOSED_PARENTHESIS body condition_aux TOKEN_SEMICOLON

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 55
    TOKEN_PLUS              shift, and go to state 56
    TOKEN_MINUS             shift, and go to state 57

    $default  reduce using rule 59 (factor_operator)

    expression       go to state 58
    exp              go to state 59
    term             go to state 60
    factor           go to state 61
    factor_operator  go to state 62


state 46

   27 cycle: TOKEN_WHILE body . TOKEN_DO TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_DO  shift, and go to state 63


state 47

   33 print: TOKEN_PRINT TOKEN_OPEN_PARENTHESIS . print_aux TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 55
    TOKEN_PLUS              shift, and go to state 56
    TOKEN_MINUS             shift, and go to state 57
    TOKEN_CONST_STRING      shift, and go to state 64

    $default  reduce using rule 59 (factor_operator)

    print_aux        go to state 65
    expression       go to state 66
    exp              go to state 59
    term             go to state 60
    factor           go to state 61
    factor_operator  go to state 62


state 48

   23 assign: TOKEN_IDENTIFIER TOKEN_ASSIGNMENT . expression TOKEN_SEMICOLON

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 55
    TOKEN_PLUS              shift, and go to state 56
    TOKEN_MINUS             shift, and go to state 57

    $default  reduce using rule 59 (factor_operator)

    expression       go to state 67
    exp              go to state 59
    term             go to state 60
    factor           go to state 61
    factor_operator  go to state 62


state 49

   28 f_call: TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS . f_call_aux TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 55
    TOKEN_PLUS              shift, and go to state 56
    TOKEN_MINUS             shift, and go to state 57

    TOKEN_CLOSED_PARENTHESIS  reduce using rule 30 (f_call_aux)
    $default                  reduce using rule 59 (factor_operator)

    f_call_aux       go to state 68
    expression       go to state 69
    exp              go to state 59
    term             go to state 60
    factor           go to state 61
    factor_operator  go to state 62


state 50

   15 body: TOKEN_OPEN_BRACE body_aux TOKEN_CLOSED_BRACE .

    $default  reduce using rule 15 (body)


state 51

   16 body_aux: statement body_aux .

    $default  reduce using rule 16 (body_aux)


state 52

   65 funcs_aux: TOKEN_IDENTIFIER TOKEN_COLON type . funcs_comma

    TOKEN_COMMA  shift, and go to state 70

    $default  reduce using rule 68 (funcs_comma)

    funcs_comma  go to state 71


state 53

   64 funcs: TOKEN_VOID TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS funcs_aux TOKEN_CLOSED_PARENTHESIS TOKEN_OPEN_BRACKET . funcs_bracket_aux body TOKEN_CLOSED_BRACKET TOKEN_SEMICOLON

    TOKEN_VAR  shift, and go to state 7

    $default  reduce using rule 70 (funcs_bracket_aux)

    vars               go to state 72
    funcs_bracket_aux  go to state 73


state 54

    8 vars_aux: TOKEN_IDENTIFIER vars_id_aux TOKEN_COLON type TOKEN_SEMICOLON . vars_loop

    TOKEN_IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 10 (vars_loop)

    vars_aux   go to state 74
    vars_loop  go to state 75


state 55

   55 factor: TOKEN_OPEN_PARENTHESIS . expression TOKEN_CLOSED_PARENTHESIS

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 55
    TOKEN_PLUS              shift, and go to state 56
    TOKEN_MINUS             shift, and go to state 57

    $default  reduce using rule 59 (factor_operator)

    expression       go to state 76
    exp              go to state 59
    term             go to state 60
    factor           go to state 61
    factor_operator  go to state 62


state 56

   57 factor_operator: TOKEN_PLUS .

    $default  reduce using rule 57 (factor_operator)


state 57

   58 factor_operator: TOKEN_MINUS .

    $default  reduce using rule 58 (factor_operator)


state 58

   24 condition: TOKEN_IF TOKEN_OPEN_PARENTHESIS expression . TOKEN_CLOSED_PARENTHESIS body condition_aux TOKEN_SEMICOLON

    TOKEN_CLOSED_PARENTHESIS  shift, and go to state 77


state 59

   39 expression: exp . expression_aux

    TOKEN_LESS_THAN     shift, and go to state 78
    TOKEN_GREATER_THAN  shift, and go to state 79
    TOKEN_NOT_EQUAL     shift, and go to state 80

    $default  reduce using rule 41 (expression_aux)

    expression_aux       go to state 81
    expression_operator  go to state 82


state 60

   45 exp: term . exp_aux

    TOKEN_PLUS   shift, and go to state 83
    TOKEN_MINUS  shift, and go to state 84

    $default  reduce using rule 47 (exp_aux)

    exp_aux       go to state 85
    exp_operator  go to state 86


state 61

   50 term: factor . term_aux

    TOKEN_MULTIPLICATION  shift, and go to state 87
    TOKEN_DIVISION        shift, and go to state 88

    $default  reduce using rule 52 (term_aux)

    term_aux       go to state 89
    term_operator  go to state 90


state 62

   56 factor: factor_operator . factor_symbol

    TOKEN_IDENTIFIER   shift, and go to state 91
    TOKEN_CONST_INT    shift, and go to state 92
    TOKEN_CONST_FLOAT  shift, and go to state 93

    factor_symbol  go to state 94
    cte            go to state 95


state 63

   27 cycle: TOKEN_WHILE body TOKEN_DO . TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 96


state 64

   34 print_aux: TOKEN_CONST_STRING . print_comma

    TOKEN_COMMA  shift, and go to state 97

    $default  reduce using rule 38 (print_comma)

    print_comma  go to state 98


state 65

   33 print: TOKEN_PRINT TOKEN_OPEN_PARENTHESIS print_aux . TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_CLOSED_PARENTHESIS  shift, and go to state 99


state 66

   35 print_aux: expression . print_comma

    TOKEN_COMMA  shift, and go to state 97

    $default  reduce using rule 38 (print_comma)

    print_comma  go to state 100


state 67

   23 assign: TOKEN_IDENTIFIER TOKEN_ASSIGNMENT expression . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 101


state 68

   28 f_call: TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS f_call_aux . TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_CLOSED_PARENTHESIS  shift, and go to state 102


state 69

   29 f_call_aux: expression . f_call_comma

    TOKEN_COMMA  shift, and go to state 103

    $default  reduce using rule 32 (f_call_comma)

    f_call_comma  go to state 104


state 70

   67 funcs_comma: TOKEN_COMMA . TOKEN_IDENTIFIER TOKEN_COLON type funcs_comma

    TOKEN_IDENTIFIER  shift, and go to state 105


state 71

   65 funcs_aux: TOKEN_IDENTIFIER TOKEN_COLON type funcs_comma .

    $default  reduce using rule 65 (funcs_aux)


state 72

   69 funcs_bracket_aux: vars .

    $default  reduce using rule 69 (funcs_bracket_aux)


state 73

   64 funcs: TOKEN_VOID TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS funcs_aux TOKEN_CLOSED_PARENTHESIS TOKEN_OPEN_BRACKET funcs_bracket_aux . body TOKEN_CLOSED_BRACKET TOKEN_SEMICOLON

    TOKEN_OPEN_BRACE  shift, and go to state 21

    body  go to state 106


state 74

    9 vars_loop: vars_aux .

    $default  reduce using rule 9 (vars_loop)


state 75

    8 vars_aux: TOKEN_IDENTIFIER vars_id_aux TOKEN_COLON type TOKEN_SEMICOLON vars_loop .

    $default  reduce using rule 8 (vars_aux)


state 76

   55 factor: TOKEN_OPEN_PARENTHESIS expression . TOKEN_CLOSED_PARENTHESIS

    TOKEN_CLOSED_PARENTHESIS  shift, and go to state 107


state 77

   24 condition: TOKEN_IF TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS . body condition_aux TOKEN_SEMICOLON

    TOKEN_OPEN_BRACE  shift, and go to state 21

    body  go to state 108


state 78

   43 expression_operator: TOKEN_LESS_THAN .

    $default  reduce using rule 43 (expression_operator)


state 79

   42 expression_operator: TOKEN_GREATER_THAN .

    $default  reduce using rule 42 (expression_operator)


state 80

   44 expression_operator: TOKEN_NOT_EQUAL .

    $default  reduce using rule 44 (expression_operator)


state 81

   39 expression: exp expression_aux .

    $default  reduce using rule 39 (expression)


state 82

   40 expression_aux: expression_operator . exp

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 55
    TOKEN_PLUS              shift, and go to state 56
    TOKEN_MINUS             shift, and go to state 57

    $default  reduce using rule 59 (factor_operator)

    exp              go to state 109
    term             go to state 60
    factor           go to state 61
    factor_operator  go to state 62


state 83

   48 exp_operator: TOKEN_PLUS .

    $default  reduce using rule 48 (exp_operator)


state 84

   49 exp_operator: TOKEN_MINUS .

    $default  reduce using rule 49 (exp_operator)


state 85

   45 exp: term exp_aux .

    $default  reduce using rule 45 (exp)


state 86

   46 exp_aux: exp_operator . exp

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 55
    TOKEN_PLUS              shift, and go to state 56
    TOKEN_MINUS             shift, and go to state 57

    $default  reduce using rule 59 (factor_operator)

    exp              go to state 110
    term             go to state 60
    factor           go to state 61
    factor_operator  go to state 62


state 87

   53 term_operator: TOKEN_MULTIPLICATION .

    $default  reduce using rule 53 (term_operator)


state 88

   54 term_operator: TOKEN_DIVISION .

    $default  reduce using rule 54 (term_operator)


state 89

   50 term: factor term_aux .

    $default  reduce using rule 50 (term)


state 90

   51 term_aux: term_operator . term

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 55
    TOKEN_PLUS              shift, and go to state 56
    TOKEN_MINUS             shift, and go to state 57

    $default  reduce using rule 59 (factor_operator)

    term             go to state 111
    factor           go to state 61
    factor_operator  go to state 62


state 91

   60 factor_symbol: TOKEN_IDENTIFIER .

    $default  reduce using rule 60 (factor_symbol)


state 92

   62 cte: TOKEN_CONST_INT .

    $default  reduce using rule 62 (cte)


state 93

   63 cte: TOKEN_CONST_FLOAT .

    $default  reduce using rule 63 (cte)


state 94

   56 factor: factor_operator factor_symbol .

    $default  reduce using rule 56 (factor)


state 95

   61 factor_symbol: cte .

    $default  reduce using rule 61 (factor_symbol)


state 96

   27 cycle: TOKEN_WHILE body TOKEN_DO TOKEN_OPEN_PARENTHESIS . expression TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 55
    TOKEN_PLUS              shift, and go to state 56
    TOKEN_MINUS             shift, and go to state 57

    $default  reduce using rule 59 (factor_operator)

    expression       go to state 112
    exp              go to state 59
    term             go to state 60
    factor           go to state 61
    factor_operator  go to state 62


state 97

   36 print_comma: TOKEN_COMMA . expression print_comma
   37            | TOKEN_COMMA . TOKEN_CONST_STRING print_comma

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 55
    TOKEN_PLUS              shift, and go to state 56
    TOKEN_MINUS             shift, and go to state 57
    TOKEN_CONST_STRING      shift, and go to state 113

    $default  reduce using rule 59 (factor_operator)

    expression       go to state 114
    exp              go to state 59
    term             go to state 60
    factor           go to state 61
    factor_operator  go to state 62


state 98

   34 print_aux: TOKEN_CONST_STRING print_comma .

    $default  reduce using rule 34 (print_aux)


state 99

   33 print: TOKEN_PRINT TOKEN_OPEN_PARENTHESIS print_aux TOKEN_CLOSED_PARENTHESIS . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 115


state 100

   35 print_aux: expression print_comma .

    $default  reduce using rule 35 (print_aux)


state 101

   23 assign: TOKEN_IDENTIFIER TOKEN_ASSIGNMENT expression TOKEN_SEMICOLON .

    $default  reduce using rule 23 (assign)


state 102

   28 f_call: TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS f_call_aux TOKEN_CLOSED_PARENTHESIS . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 116


state 103

   31 f_call_comma: TOKEN_COMMA . expression f_call_comma

    TOKEN_OPEN_PARENTHESIS  shift, and go to state 55
    TOKEN_PLUS              shift, and go to state 56
    TOKEN_MINUS             shift, and go to state 57

    $default  reduce using rule 59 (factor_operator)

    expression       go to state 117
    exp              go to state 59
    term             go to state 60
    factor           go to state 61
    factor_operator  go to state 62


state 104

   29 f_call_aux: expression f_call_comma .

    $default  reduce using rule 29 (f_call_aux)


state 105

   67 funcs_comma: TOKEN_COMMA TOKEN_IDENTIFIER . TOKEN_COLON type funcs_comma

    TOKEN_COLON  shift, and go to state 118


state 106

   64 funcs: TOKEN_VOID TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS funcs_aux TOKEN_CLOSED_PARENTHESIS TOKEN_OPEN_BRACKET funcs_bracket_aux body . TOKEN_CLOSED_BRACKET TOKEN_SEMICOLON

    TOKEN_CLOSED_BRACKET  shift, and go to state 119


state 107

   55 factor: TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS .

    $default  reduce using rule 55 (factor)


state 108

   24 condition: TOKEN_IF TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS body . condition_aux TOKEN_SEMICOLON

    TOKEN_ELSE  shift, and go to state 120

    $default  reduce using rule 26 (condition_aux)

    condition_aux  go to state 121


state 109

   40 expression_aux: expression_operator exp .

    $default  reduce using rule 40 (expression_aux)


state 110

   46 exp_aux: exp_operator exp .

    $default  reduce using rule 46 (exp_aux)


state 111

   51 term_aux: term_operator term .

    $default  reduce using rule 51 (term_aux)


state 112

   27 cycle: TOKEN_WHILE body TOKEN_DO TOKEN_OPEN_PARENTHESIS expression . TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON

    TOKEN_CLOSED_PARENTHESIS  shift, and go to state 122


state 113

   37 print_comma: TOKEN_COMMA TOKEN_CONST_STRING . print_comma

    TOKEN_COMMA  shift, and go to state 97

    $default  reduce using rule 38 (print_comma)

    print_comma  go to state 123


state 114

   36 print_comma: TOKEN_COMMA expression . print_comma

    TOKEN_COMMA  shift, and go to state 97

    $default  reduce using rule 38 (print_comma)

    print_comma  go to state 124


state 115

   33 print: TOKEN_PRINT TOKEN_OPEN_PARENTHESIS print_aux TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON .

    $default  reduce using rule 33 (print)


state 116

   28 f_call: TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS f_call_aux TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON .

    $default  reduce using rule 28 (f_call)


state 117

   31 f_call_comma: TOKEN_COMMA expression . f_call_comma

    TOKEN_COMMA  shift, and go to state 103

    $default  reduce using rule 32 (f_call_comma)

    f_call_comma  go to state 125


state 118

   67 funcs_comma: TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_COLON . type funcs_comma

    TOKEN_INT    shift, and go to state 42
    TOKEN_FLOAT  shift, and go to state 43

    type  go to state 126


state 119

   64 funcs: TOKEN_VOID TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS funcs_aux TOKEN_CLOSED_PARENTHESIS TOKEN_OPEN_BRACKET funcs_bracket_aux body TOKEN_CLOSED_BRACKET . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 127


state 120

   25 condition_aux: TOKEN_ELSE . body

    TOKEN_OPEN_BRACE  shift, and go to state 21

    body  go to state 128


state 121

   24 condition: TOKEN_IF TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS body condition_aux . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 129


state 122

   27 cycle: TOKEN_WHILE body TOKEN_DO TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS . TOKEN_SEMICOLON

    TOKEN_SEMICOLON  shift, and go to state 130


state 123

   37 print_comma: TOKEN_COMMA TOKEN_CONST_STRING print_comma .

    $default  reduce using rule 37 (print_comma)


state 124

   36 print_comma: TOKEN_COMMA expression print_comma .

    $default  reduce using rule 36 (print_comma)


state 125

   31 f_call_comma: TOKEN_COMMA expression f_call_comma .

    $default  reduce using rule 31 (f_call_comma)


state 126

   67 funcs_comma: TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_COLON type . funcs_comma

    TOKEN_COMMA  shift, and go to state 70

    $default  reduce using rule 68 (funcs_comma)

    funcs_comma  go to state 131


state 127

   64 funcs: TOKEN_VOID TOKEN_IDENTIFIER TOKEN_OPEN_PARENTHESIS funcs_aux TOKEN_CLOSED_PARENTHESIS TOKEN_OPEN_BRACKET funcs_bracket_aux body TOKEN_CLOSED_BRACKET TOKEN_SEMICOLON .

    $default  reduce using rule 64 (funcs)


state 128

   25 condition_aux: TOKEN_ELSE body .

    $default  reduce using rule 25 (condition_aux)


state 129

   24 condition: TOKEN_IF TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS body condition_aux TOKEN_SEMICOLON .

    $default  reduce using rule 24 (condition)


state 130

   27 cycle: TOKEN_WHILE body TOKEN_DO TOKEN_OPEN_PARENTHESIS expression TOKEN_CLOSED_PARENTHESIS TOKEN_SEMICOLON .

    $default  reduce using rule 27 (cycle)


state 131

   67 funcs_comma: TOKEN_COMMA TOKEN_IDENTIFIER TOKEN_COLON type funcs_comma .

    $default  reduce using rule 67 (funcs_comma)
